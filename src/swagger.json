{
  "openapi": "3.0.3",
  "info": {
    "title": "TrilhaBackEndJR - Código Certo",
    "description": "This is a sample server for a tasks.in.",
    "contact": {
      "name": "Jeferson Santos",
      "url": "https://github.com/jefersonsann"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "users"
    },
    {
      "name": "auth"
    },
    {
      "name": "tasks"
    }
  ],
  "paths": {
    "/api/user": {
      "post": {
        "tags": ["users"],
        "summary": "Criar um novo usuário.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser",
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição falhou, ID invalido."
          },
          "401": {
            "description": "Autorização esta ausentes ou são inválidas."
          },
          "404": {
            "description": "Usuário com o ID especificado não foi encontrado."
          },
          "5XX": {
            "description": "Erro inesperado."
          }
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Buscar usuário autenticado",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Atualizar usuário autenticado",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": 654321
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Deletar usuário autenticado",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": 654321
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Rota para fazer login.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Logged",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição falhou, usuário invalido."
          },
          "404": {
            "description": "Usuário não foi encontrado."
          },
          "5XX": {
            "description": "Erro inesperado."
          }
        }
      }
    },
    "/api/auth/logout": {
      "put": {
        "tags": ["auth"],
        "summary": "Rota para fazer logout.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Logged",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Requisição falhou, usuário invalido."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      }
    },
    "/api/task": {
      "post": {
        "tags": ["tasks"],
        "summary": "Criar uma nova task.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTask",
                "required": ["title", "description"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Requisição falhou, ID invalido."
          },
          "401": {
            "description": "Autorização esta ausentes ou são inválidas."
          },
          "404": {
            "description": "Usuário com o ID especificado não foi encontrado."
          },
          "5XX": {
            "description": "Erro inesperado."
          }
        }
      },
      "get": {
        "tags": ["tasks"],
        "summary": "Listar todas as tasks criadas.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      },
      "put": {
        "tags": ["tasks"],
        "summary": "Atualizar task de próprio usuário que esteja autenticado",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Novo titulo"
                  },
                  "description": {
                    "type": "string",
                    "example": "Nova descrição"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      }
    },
    "/api/task/{id}": {
      "get": {
        "tags": ["tasks"],
        "summary": "Buscar task por id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      },
      "delete": {
        "tags": ["tasks"],
        "summary": "Deletar task por id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ErrorServer"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "OK": {
        "description": "OK"
      },
      "NotFound": {
        "description": "O recurso especificado não foi encontrado."
      },
      "Unauthorized": {
        "description": "Autorização esta ausentes ou são inválidas."
      },
      "ErrorServer": {
        "description": "Erro inesperado."
      }
    },
    "schemas": {
      "Auth": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": ["accessToken"]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@doe.com"
          },
          "password": {
            "type": "string",
            "example": 123456
          }
        },
        "required": ["email", "password"]
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@doe.com"
          },
          "password": {
            "type": "string",
            "example": 123456
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "clyyz5hvq000008kuhr5acdf3"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@doe.com"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Session"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "NewTask": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Tarefa 1"
          },
          "description": {
            "type": "string",
            "example": "Desenvolver uma tarefa de backend."
          }
        },
        "required": ["title", "description"]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "completed": {
            "type": "boolean",
            "example": false
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["code", "message"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
