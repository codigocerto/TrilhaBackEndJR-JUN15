generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String

  tasks    Task[]
  comments Comment[]
  sessions Session[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Session {
  id     String  @id @default(cuid())
  userId String
  token  String  @unique
  active Boolean @default(true)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId, token])
  @@map("sessions")
}

model Task {
  id          String @id @default(cuid())
  title       String
  description String
  slug        String @unique
  userId      String

  comments Comment[]
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tasks")
}

model Comment {
  id      Int     @id @default(autoincrement())
  content String
  userId  String
  taskId  String
  media   String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}
